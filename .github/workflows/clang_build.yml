name: Manual Clang 15 Build and Cache

on:
  workflow_dispatch:
    inputs:
      clang_version:
        description: 'Clang version to build'
        required: false
        default: '19.1.7'

env:
  CLANG_VERSION: ${{ github.event.inputs.clang_version || '19.1.7' }}
  INSTALL_DIR: ${{ github.workspace }}/clang-install

jobs:
  build-clang:
    runs-on: ubuntu-24.04
    steps:
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            gcc \
            g++ \
            git

      - name: Clone LLVM project
        run: |
          git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          git checkout tags/llvmorg-${{ env.CLANG_VERSION }}

      - name: Configure CMake
        working-directory: llvm-project
        run: |
          cmake -S llvm -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \
            -DLLVM_ENABLE_PROJECTS:STRING=clang \
            -DLLVM_ENABLE_RTTI:BOOL=ON \
            -DCLANG_LINK_CLANG_DYLIB:BOOL=ON \
            -DLLVM_LINK_LLVM_DYLIB:BOOL=ON \
            -DLLVM_TARGETS_TO_BUILD=host

      - name: Build Clang
        working-directory: llvm-project/build
        run: |
          ninja

      - name: Install Clang
        working-directory: llvm-project/build
        run: |
          ninja install

      - name: Compress Clang Installation
        run: |
          tar -czvf clang-${CLANG_VERSION}-linux.tar.gz -C ${{ env.INSTALL_DIR }} .

      - name: Upload Clang Artifact
        uses: actions/upload-artifact@v4
        with:
          name: clang-${{ env.CLANG_VERSION }}-linux
          path: clang-${{ env.CLANG_VERSION }}-linux.tar.gz

      - name: Cleanup
        run: |
          rm -rf llvm-project
